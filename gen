#!/bin/bash

echo 'Start'

FILES=$(ls /etc/simp_le-auto.d/)

COUNTER=0
for i in $FILES
do
  readarray CONTENT < /etc/simp_le-auto.d/$i
  NAME_ARR[$COUNTER]=$(echo ${CONTENT[0]} | tr "," "\n" | head -1 )
  CONTAINER_ARR[$COUNTER]=$(echo ${CONTENT[1]} | tr "," " ")

  PARAMS=""
  for j in $(echo ${CONTENT[0]} | tr "," "\n")
  do
    PARAMS="$PARAMS -d $j"
  done

  PARAM_ARR[$COUNTER]="$PARAMS"

  let COUNTER+=1
done

VOLUME_NAME=$SERVER_NAME-vl
CONTAINER_DATA_NAME=$SERVER_NAME-data

for (( i=0; i<${#PARAM_ARR[@]}; i++ ))
do
  echo "Try ${NAME_ARR[$i]}"

  docker $DOCKER_SIMP_LE_ARGS rm $SERVER_NAME
  docker $DOCKER_SIMP_LE_ARGS volume rm $VOLUME_NAME
  docker $DOCKER_SIMP_LE_ARGS rm $CONTAINER_DATA_NAME

  mv ${CERTS_DIR}chain_${NAME_ARR[$i]}.pem ${CERTS_DIR}chain.pem
  mv ${CERTS_DIR}cert_${NAME_ARR[$i]}.pem ${CERTS_DIR}cert.pem
  mv ${CERTS_DIR}key_${NAME_ARR[$i]}.pem ${CERTS_DIR}key.pem
  mv ${CERTS_DIR}fullchain_${NAME_ARR[$i]}.pem ${CERTS_DIR}fullchain.pem

  docker $DOCKER_SIMP_LE_ARGS volume create $VOLUME_NAME
  docker $DOCKER_SIMP_LE_ARGS run -itd --name $CONTAINER_DATA_NAME -v $VOLUME_NAME:/certs alpine:3.4 ash

  tar -cf - -C $CERTS_DIR . | docker $DOCKER_SIMP_LE_ARGS exec -i $CONTAINER_DATA_NAME tar -xf - -C /certs/

  docker $DOCKER_SIMP_LE_ARGS run -v $VOLUME_NAME:/certs -p $LISTEN_PORT:80 \
    --name $SERVER_NAME $DOCKER_RUN_SIMP_LE_ARGS \
    m3adow/letsencrypt-simp_le \
    --tos_sha256 6373439b9f29d67a5cd4d18cbc7f264809342dbf21cb2ba2fc7588df987a6221 \
    --email $EMAIL \
    -f account_key.json -f chain.pem -f cert.pem -f key.pem -f fullchain.pem \
    ${PARAM_ARR[$i]}

  STATUS=$?

  docker $DOCKER_SIMP_LE_ARGS exec $CONTAINER_DATA_NAME tar -cf - -C /certs/ . | tar -xf - -C $CERTS_DIR

  mv ${CERTS_DIR}chain.pem ${CERTS_DIR}chain_${NAME_ARR[$i]}.pem
  mv ${CERTS_DIR}cert.pem ${CERTS_DIR}cert_${NAME_ARR[$i]}.pem
  mv ${CERTS_DIR}key.pem ${CERTS_DIR}key_${NAME_ARR[$i]}.pem
  mv ${CERTS_DIR}fullchain.pem ${CERTS_DIR}fullchain_${NAME_ARR[$i]}.pem

  if [ $STATUS = 0 ]
  then
    if [ -n "${CONTAINER_ARR[$i]}" ]
    then
      docker $DOCKER_SIMP_LE_ARGS restart ${CONTAINER_ARR[$i]}
    fi

    # to limit request rate
    sleep 60
  fi

  docker $DOCKER_SIMP_LE_ARGS rm $SERVER_NAME
  docker $DOCKER_SIMP_LE_ARGS volume rm $VOLUME_NAME
  docker $DOCKER_SIMP_LE_ARGS rm $CONTAINER_DATA_NAME
done

echo 'Finish'
